---
name: Reusable Terraform Pipeline

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      aws-ecr-repository-name:
        required: true
        type: string
      application_path:
        required: true
        type: string


jobs:
  terraform:
    name: Terraform workflow
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ".infra/terraform"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.4"

      - name: Setup Terragrunt
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.58.12/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt
          terragrunt -v

      - name: Set branch-based environment variables
        uses: iamtheyammer/branch-env-vars@v1.2.2
        with:
          bevOverwrite: true
          AWS_ACCESS_KEY: |
            develop:${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
            main:${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
            !default:${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          AWS_SECRET_ACCESS_KEY: |
            develop:${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
            main:${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
            !default:${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          ENVIRONMENT: |
            develop:dev
            main:prod
            !default:dev
          AWS_REGION: |
            develop:us-east-1
            main:us-east-2
            !default:us-east-1
          NODE_ENV: |
            develop:dev
            main:production
            !default:development

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ inputs.aws-ecr-repository-name }}
          IMAGE_TAG: ${{ github.sha }}
          NODE_ENV: ${{ env.NODE_ENV }}
          APP_PATH: ${{ inputs.application_path }}
        run: |
          cd $APP_PATH
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --build-arg NODE_ENV=${NODE_ENV} .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
      - name: Terraform Init
        shell: bash
        env:
          TF_WORKSPACE: ${{ env.ENVIRONMENT }}
        run: terragrunt init
  
      - name: Terraform Validate
        run: terragrunt validate
  
      - name: Terraform Plan
        run: terragrunt plan -out=tfplan -var-file="./tfvars/${{ env.ENVIRONMENT }}.tfvars"
  
      - name: Terraform Apply
        run: terragrunt apply -auto-approve tfplan
